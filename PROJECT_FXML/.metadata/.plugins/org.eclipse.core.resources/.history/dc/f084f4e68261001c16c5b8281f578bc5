package UI_Layer;

import javafx.beans.property.SimpleBooleanProperty;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.HBox;

public class Theme extends HBox {

	private final Label label = new Label();
	private final Button button = new Button();

	private SimpleBooleanProperty switchedOn = new SimpleBooleanProperty(false);
	public SimpleBooleanProperty switchOnProperty() { return switchedOn; }

	private void init() {

		label.setText("OFF");

		getChildren().addAll(label, button);
		button.setOnAction(new EventHandler<ActionEvent>() {
			public void handle(ActionEvent e) {
				switchedOn.set(!switchedOn.get());
			}
		});
		label.setOnMouseClicked(new EventHandler<MouseEvent>() {
			public void handle(MouseEvent e) {
				switchedOn.set(!switchedOn.get());
			}
		});
		setStyle();
		bindProperties();
	}

	private void setStyle() {
		//Default Width
		setWidth(80);
		label.setAlignment(Pos.CENTER);
		setStyle("-fx-background-color: grey; -fx-text-fill:black; -fx-background-radius: 4;");
		setAlignment(Pos.CENTER_LEFT);
	}

	private void bindProperties() {
		label.prefWidthProperty().bind(widthProperty().divide(2));
		label.prefHeightProperty().bind(heightProperty());
		button.prefWidthProperty().bind(widthProperty().divide(2));
		button.prefHeightProperty().bind(heightProperty());
	}

	public Theme() {
		init();
		switchedOn.addListener(new ChangeListener<Boolean>() {
			public void changed(ObservableValue<? extends Boolean> a, Boolean b, Boolean c) {
				if (c) {
					label.setText("ON");
					setStyle("-fx-background-color: green;");
					label.toFront();
				}
				else {
					label.setText("OFF");
					setStyle("-fx-background-color: grey;");
					button.toFront();
				}
			}
		});
	}
}
