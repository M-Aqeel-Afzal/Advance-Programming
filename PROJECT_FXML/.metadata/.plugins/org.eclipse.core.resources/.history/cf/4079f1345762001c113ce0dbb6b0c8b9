import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

import java.util.ArrayList;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import BussinessLogic.Accounts;
import BussinessLogic.Dates;
import BussinessLogic.HibernateDatabase;
import BussinessLogic.KametiOwner;
import BussinessLogic.KametiParty;
import ExceptionsHandling.AccountNotExist;
import ExceptionsHandling.PartyNotFound;

public class JUnitTesting {
	static Session session;
	static Transaction trans;
	@BeforeClass

	public static void setup()
	{
		Configuration con = new Configuration();
		con.configure("hibernate.cfg.xml");
		con.configure().addAnnotatedClass(Accounts.class);
		SessionFactory sf= con.buildSessionFactory();
		// System.out.println("Please Register yourself!");
		try {
			session= sf.openSession();
		} catch (HibernateException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		trans= session.beginTransaction();
		boolean flag=true;
		boolean FileFlag=true;


		KametiParty kp=new KametiParty("poc7");
		kp.setCapecity(10);
		kp.setInstallment_per_month(500);
		kp.setVacant_Position(10);
		kp.setStatus("Active");
		kp.setOwner_cinc(2);
		ArrayList<KametiParty> pr = new ArrayList<KametiParty>();
		pr.add(kp);
		Dates d=new Dates("11/1/12","11/1/12","11/1/12","11/1/12","11/1/12","11/1/12");
		kp.setDates(d);
		session.save(kp);
		KametiOwner owner =KametiOwner.getAccount(session,2);
		if(owner==null)
		{  try {
			owner=new KametiOwner(Accounts.getAccount(2),pr,2);
		} catch (AccountNotExist e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		session.save(owner);
		}


		// session.save(KametiParty.register_member(2, "Ali", "Baba", "Isb", "12345", "male",FileFlag));
		trans.commit();


	}
	@Test
	public void test_Registration() {   

		Accounts acc=null;
		try {
			Session session = HibernateDatabase.getSession();
			acc=Accounts.getAccount(2);
		} catch (AccountNotExist e) {
			// TODO Auto-generated catch block
			System.err.print(e);
		}

		assertNotNull(acc);


	}

	@Test
	public void test_PartyCreation() {   

		KametiParty acc=null;
		try {
			acc=KametiParty.getParty(KametiOwner.getAccount(2).getParties().get(0).getKameti_ID());
		} catch (PartyNotFound e) {
			// TODO Auto-generated catch block

		}

		assertNotNull(acc);


	}
	@Test
	public void test_PartyDeletion() {   
		KametiOwner.Delete_Party(KametiOwner.getAccount(2).getParties().get(0).getKameti_ID(),2);

		KametiParty acc=null;
		try {
			acc=KametiParty.getParty(session,KametiOwner.getAccount(2).getParties().get(0).getKameti_ID());
			System.out.println("kiD  "+acc.getKameti_ID());
		} catch (PartyNotFound e) {
			// TODO Auto-generated catch block

		}
		assertEquals(acc.getStatus(),"Active");


	}
}
